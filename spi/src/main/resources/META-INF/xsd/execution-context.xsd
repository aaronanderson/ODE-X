<?xml version="1.0" encoding="UTF-8"?>
<!--

    Licensed to the Apache Software Foundation (ASF) under one
    or more contributor license agreements.  See the NOTICE file
    distributed with this work for additional information
    regarding copyright ownership.  The ASF licenses this file
    to you under the Apache License, Version 2.0 (the
    "License"); you may not use this file except in compliance
    with the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing,
    software distributed under the License is distributed on an
    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, either express or implied.  See the License for the
    specific language governing permissions and limitations
    under the License.

-->
<schema targetNamespace="http://ode.apache.org/execution-context" elementFormDefault="qualified" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://ode.apache.org/execution-context">


	<complexType name="operationType" abstract="true">
		<!--  <attribute name="name" type="QName" use="required" />-->
		<attribute name="inputType" type="Name" use="required" />
		<attribute name="resultType" type="Name" use="required" />
	</complexType>

	<complexType name="inputType" abstract="true" />

	<complexType name="resultType" abstract="true" />

	<complexType name="newVariableType">
		<complexContent>
			<extension base="tns:operationType" />
		</complexContent>
	</complexType>

	<complexType name="newVariableInputType">
		<complexContent>
			<extension base="tns:inputType">
				<attribute name="name" type="string" use="required" />
				<attribute name="scope" type="tns:scopeType" use="required" />
			</extension>
		</complexContent>
	</complexType>

	<complexType name="newProcessType">
		<complexContent>
			<extension base="tns:operationType">
			</extension>
		</complexContent>
	</complexType>

	<complexType name="newThreadType">
		<complexContent>
			<extension base="tns:operationType">
			</extension>
		</complexContent>
	</complexType>

	<complexType name="handlerType">
		<complexContent>
			<extension base="tns:operationType">
			</extension>
		</complexContent>
	</complexType>

	<complexType name="raiseType">
		<complexContent>
			<extension base="tns:operationType">
			</extension>
		</complexContent>
	</complexType>

	<simpleType name="varAddressType">
		<restriction base="ID">
			<pattern value="b\d+c\d*[vp]\d+" />
		</restriction>
	</simpleType>


	<simpleType name="varAddressRefType">
		<restriction base="IDREF">
			<pattern value="b\d+c\d*[vp]\d+" />
		</restriction>
	</simpleType>


	<simpleType name="insAddressType">
		<restriction base="ID">
			<pattern value="b\d+i\d+" />
		</restriction>
	</simpleType>

	<complexType name="invokeType">
		<complexContent>
			<extension base="tns:operationType">
				<sequence>
					<element name="parameter" />
				</sequence>
				<attribute name="ins" type="tns:insAddressType" use="required" />
			</extension>
		</complexContent>
	</complexType>


	<simpleType name="scopeType">
		<restriction base="string" />
	</simpleType>

	<complexType name="variableType">
		<attribute name="name" type="string" use="required" />
	</complexType>

	<complexType name="frameType" abstract="true" />

	<element name="frame" type="tns:frameType" abstract="true" />

	<complexType name="variableDefType">
		<attribute name="var" type="tns:varAddressType" use="required" />
	</complexType>

	<element name="variableDef" type="tns:variableDefType" />

	<complexType name="variableFrameType">
		<complexContent>
			<extension base="tns:frameType">
				<sequence>
					<element ref="tns:variableDef" minOccurs="1" maxOccurs="1" />
				</sequence>
			</extension>
		</complexContent>
	</complexType>

	<element name="variableFrame" type="tns:variableFrameType" substitutionGroup="tns:frame" />

	<complexType name="callFrameType">
		<complexContent>
			<extension base="tns:frameType" />
		</complexContent>
	</complexType>

	<element name="callFrame" type="tns:callFrameType" substitutionGroup="tns:frame" />

	<!-- Good insight - http://en.wikipedia.org/wiki/Call_stack  -->
	<complexType name="stackType">
		<sequence>
			<element ref="tns:frame" minOccurs="0" maxOccurs="unbounded" />
			<any namespace="##other" processContents="strict" minOccurs="0" maxOccurs="unbounded" />
		</sequence>
	</complexType>

	<element name="stack" type="tns:stackType" abstract="true" />

	<complexType name="blockStackType">
		<complexContent>
			<extension base="tns:stackType">
				<sequence>
					<element ref="tns:block" minOccurs="0" maxOccurs="1" />
					<element ref="tns:context" minOccurs="0" maxOccurs="1" />
				</sequence>
			</extension>
		</complexContent>
	</complexType>

	<element name="block" type="tns:blockStackType" substitutionGroup="tns:stack" />

	<complexType name="contextStackType">
		<complexContent>
			<extension base="tns:stackType">
				<sequence>
					<element ref="tns:context" minOccurs="0" maxOccurs="1" />
				</sequence>
			</extension>
		</complexContent>
	</complexType>

	<element name="context" type="tns:contextStackType" substitutionGroup="tns:stack" />

	<complexType name="statusType" abstract="true" />

	<element name="status" type="tns:statusType" abstract="true" />

	<element name="running" substitutionGroup="tns:status">
		<complexType>
			<complexContent>
				<extension base="tns:statusType">
				</extension>
			</complexContent>
		</complexType>
	</element>
	
	<element name="terminated" substitutionGroup="tns:status">
		<complexType>
			<complexContent>
				<extension base="tns:statusType">
				</extension>
			</complexContent>
		</complexType>
	</element>
	
	<element name="scheduled" substitutionGroup="tns:status">
		<complexType>
			<complexContent>
				<extension base="tns:statusType">
				</extension>
			</complexContent>
		</complexType>
	</element>

	<element name="locked" substitutionGroup="tns:status">
		<complexType>
			<complexContent>
				<extension base="tns:statusType">
				</extension>
			</complexContent>
		</complexType>
	</element>

	<element name="exchange" substitutionGroup="tns:status">
		<complexType>
			<complexContent>
				<extension base="tns:statusType">
				</extension>
			</complexContent>
		</complexType>
	</element>

	<complexType name="executionStateType">
		<sequence>
			<element ref="tns:status" minOccurs="1" maxOccurs="1" />
			<element ref="tns:block" minOccurs="1" maxOccurs="1" />
			<any namespace="##other" processContents="strict" minOccurs="0" maxOccurs="unbounded" />
		</sequence>
	</complexType>

	<element name="ExecutionState" type="tns:executionStateType" />


</schema>